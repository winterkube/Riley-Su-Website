html,
body {
    width: 100%;
    height: 100%;
}

body {
    //background-image: radial-gradient(#061027, #000000);
}

.container {
    width: 100%;
    height: 100%;
    margin-bottom: 50%;
}

.circle-container {
    $particleWidth: 10px;
    $particleNum: 200;
    $particleColor: hsl(100, 10%, 80%);

    position: absolute;
    transform: translateY(-10vh);
    animation-iteration-count: infinite;
    animation-timing-function: linear;

    .circle {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        mix-blend-mode: screen;
        background-image: radial-gradient(
                        hsl(310, 100%, 91%),
                        hsl(246, 100%, 93%) 10%,
                        hsla(180, 10%, 80%, 0) 56%
        );

        animation: fadein-frames 400ms infinite, scale-frames 4s infinite;

        @keyframes fade-frames {
            0% {
                opacity: 1;

            }

            50% {
                opacity: 0.7;
            }

            100% {
                opacity: 1;
            }
        }

        @keyframes scale-frames {
            0% {
                transform: scale3d(0.4, 0.4, 1);
            }

            50% {
                transform: scale3d(1.5, 1.5, 1);
            }

            100% {
                transform: scale3d(0.4, 0.4, 1);
            }
        }
    }

    @for $i from 1 through $particleNum {
        &:nth-child(#{$i}) {
            $circleSize: random($particleWidth);
            width: $circleSize + px;
            height: $circleSize + px;

            $startPositionY: random(10) + 100;
            $framesName: "move-frames-" + $i;
            $moveDuration: 40000 + random(4000) + ms;

            animation-name: #{$framesName};
            animation-duration: $moveDuration;
            animation-delay: -(random(40000) + ms);

            @keyframes #{$framesName} {
                from {
                    transform: translate3d(
                                    #{random(100) + vw},
                                    #{$startPositionY + vh},
                                    0
                    );
                }

                to {
                    transform: translate3d(
                                    #{random(100) + vw},
                                    #{- $startPositionY - random(30) + vh},
                                    0
                    );
                }
            }

            .circle {
                animation-delay: random(4000) + ms;
            }
        }
    }
}
